# Copyright 2023-2025 Cyface GmbH
#
# This file is part of the Cyface App for Android.
#
# The Cyface App for Android is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Cyface App for Android is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the Cyface App for Android. If not, see <http://www.gnu.org/licenses/>.

# This workflow ensures the building step works
#
# @author Armin Schnabel
# @version 1.0.0
# @since 3.1.4
name: Gradle Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        # Does not work out of the box with a private repository
        # see https://github.com/actions/checkout/issues/287
        #with:
        #  submodules: true
      - name: Link Deploy Keys for Submodules
        uses: webfactory/ssh-agent@v0.7.0
        with:
          # This allows to add multiple individual deploy keys for multiple private submodules
          # for a guide, see https://github.com/marketplace/actions/webfactory-ssh-agent
          ssh-private-key: |
            ${{ secrets.SSH_DEPLOY_KEY_CAMERA_SERVICE }}
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          # Only update cache on hash change (gradle build files and the wrapper properties)
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-

      - name: Add gradle.properties
        run: |
          # Use a personal read token to install the Cyface Utils package
          cp gradle.properties.template gradle.properties
          echo "githubUser=${{ secrets.GH_READ_ACCOUNT }}" >> gradle.properties
          echo "githubToken=${{ secrets.GH_READ_TOKEN }}" >> gradle.properties
          # This mock API accepts all credentials and allows the UI test to skip the login
          echo "cyface.staging_api=https://demo.cyface.de/api/v2" >> gradle.properties
          echo "cyface.staging_provider_api=https://demo.cyface.de/provider" >> gradle.properties
          echo "cyface.staging_incentives_api=https://demo.cyface.de/incentives" >> gradle.properties
          echo "cyface.staging_oauth_discovery=https://demo.cyface.de/auth" >> gradle.properties
          echo "cyface.staging_user=guestLogin" >> gradle.properties
          echo "cyface.staging_password=guestPassword" >> gradle.properties
          echo "cyface.oauth_redirect=de.cyface.app:/oauth2redirect" >> gradle.properties
          echo "cyface.oauth_redirect.r4r=de.cyface.app.r4r:/oauth2redirect" >> gradle.properties
          echo "cyface.oauth_redirect.digural=de.cyface.app.digural:/oauth2redirect" >> gradle.properties
          # Digural
          echo "digural.api=${{ secrets.DIGURAL_API }}" >> gradle.properties

      # Executing build here on Ubuntu stack (1/10th costs of MacOS stack)
      # Not using "gradle build" as we don't want to run the tests of all dependencies (e.g. backend)
      - name: Assemble with Gradle
        run: ./gradlew :ui:cyface:assembleDebug :ui:r4r:assembleDebug :ui:digural:assembleDebug
      - name: Test with Gradle
        run: ./gradlew :ui:cyface:testDebugUnitTest :ui:r4r:testDebugUnitTest :ui:digural:testDebugUnitTest
