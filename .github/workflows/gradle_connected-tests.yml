# This workflow ensures the connected tests keep working
#
# @author Armin Schnabel
# @version 1.0.0
# @since 3.2.0
name: Gradle Connected Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # Faster, but MacOS costs 8 ct/min instead of 0.8 ct/min of on Linux.
    # Unfortunately, `DataCapturingServiceTest.testDisconnectReconnect` fails on linux stack.
    # But as this is a public repository, Github Actions are currently free of charge.
    runs-on: macos-latest # as recommended in `actions/android-emulator-runner`

    # To test against multiple APIs
    strategy:
      matrix:
        api-level: [ 28 ]
        target: [ google_apis ] # required to avoid NPE in `Maps` at `GoogleMap.clear()`

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # Does not work out of the box with a private repository
        # see https://github.com/actions/checkout/issues/287
        #with:
        #  submodules: true
      - name: Link Deploy Keys for Submodules
        uses: webfactory/ssh-agent@v0.7.0
        with:
          # This allows to add multiple individual deploy keys for multiple private submodules
          # for a guide, see https://github.com/marketplace/actions/webfactory-ssh-agent
          ssh-private-key: |
            ${{ secrets.SSH_DEPLOY_KEY_CAMERA_SERVICE }}
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Add gradle.properties
        run: |
          # Use a personal read token to install the Cyface Utils package
          cp gradle.properties.template gradle.properties
          echo "githubUser=${{ secrets.GH_READ_ACCOUNT }}" >> gradle.properties
          echo "githubToken=${{ secrets.GH_READ_TOKEN }}" >> gradle.properties
          echo "google.maps_api_key=${{ secrets.GOOGLE_MAPS_KEY }}" >> gradle.properties
          echo "google.maps_api_key.r4r=${{ secrets.GOOGLE_MAPS_KEY_R4R }}" >> gradle.properties

      - name: Inject dummy credentials for UI tests to skip login
        run: |
          # This mock API accepts all credentials and allows the UI test to skip the login
          echo "cyface.staging_api=https://demo.cyface.de/api/v2" >> gradle.properties
          echo "cyface.staging_user=guestLogin" >> gradle.properties
          echo "cyface.staging_password=guestPassword" >> gradle.properties

      # Not executing build here on MacOS stack (10x costs, if private repository)
      # Not using "gradle build" as we don't want to run the tests of all dependencies (e.g. backend)
      #- name: Assemble with Gradle
      #  run: ./gradlew assemble
      #- name: Test with Gradle
      #  run: ./gradlew :measuring-client:test

      # Add caching to speed up connected tests below (see `actions/android-emulator-runner`)
      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      #- name: AVD cache
      #  uses: actions/cache@v3
      #  id: avd-cache
      #  with:
      #    path: |
      #      ~/.android/avd/*
      #      ~/.android/adb*
      #    key: avd-${{ matrix.api-level }}-${{ matrix.target }} #-${{ matrix.arch }}

      #- name: Create AVD and generate snapshot for caching
      #  if: steps.avd-cache.outputs.cache-hit != 'true'
      #  uses: reactivecircus/android-emulator-runner@v2
      #  with:
      #    api-level: ${{ matrix.api-level }}
      #    target: ${{ matrix.target }}
      #    force-avd-creation: false
      ## the recommended options by the Actions did not work here?
      ## - emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      ## Actions guide uses: `disable-animations: false` but this didn't work here?
      #    disable-animations: true
      #    script: echo "Generated AVD snapshot for caching."

      # Only execute mock tests to exclude `@FlakyTest`s (instead of running `connectedCheck`)
      - name: Connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          force-avd-creation: false
          # default options are: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          # Action recommendation: -no-snapshot-save -camera-back none
          # To support future camera capturing tests: -camera-back emulated
          #   but this lead to `Timeout waiting for emulator` error
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew :measuring-client:connectedDebugAndroidTest
          # To execute a single test class
          #script: ./gradlew :measuring-client:connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=de.cyface.app.CapturingNotificationTest
