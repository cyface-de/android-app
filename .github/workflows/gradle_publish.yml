# This workflow creates a signed Android Bundle which can be uploaded to Play Store Console
#
# @author Armin Schnabel
# @version 1.0.0
# @since 3.2.0
name: Gradle Publish

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # Does not work out of the box with a private repository
        # see https://github.com/actions/checkout/issues/287
        #with:
        #  submodules: true
      - name: Link Deploy Keys for Submodules
        uses: webfactory/ssh-agent@v0.7.0
        with:
          # This allows to add multiple individual deploy keys for multiple private submodules
          # for a guide, see https://github.com/marketplace/actions/webfactory-ssh-agent
          ssh-private-key: |
            ${{ secrets.SSH_DEPLOY_KEY_CAMERA_SERVICE }}
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Add sentry.properties
        run: |
          echo "defaults.project=android-app" > sentry.properties
          echo "defaults.org=cyface" >> sentry.properties
          echo "auth.token=${{ secrets.SENTRY_API_TOKEN }}" >> sentry.properties

      - name: Add gradle.properties
        run: |
          # Use the repository's automatically set up token to publish to the registry
          cp gradle.properties.template gradle.properties
          echo "githubUser=${{ github.actor }}" >> gradle.properties
          echo "githubToken=${{ secrets.GITHUB_TOKEN }}" >> gradle.properties
          # Inject Cyface APIs URL
          echo "cyface.api=${{ secrets.PUBLIC_API }}" >> gradle.properties
          echo "cyface.auth_api=${{ secrets.PUBLIC_AUTH_API }}" >> gradle.properties
          # Inject Google Maps API key
          echo "google.maps_api_key=${{ secrets.GOOGLE_MAPS_KEY }}" >> gradle.properties
          echo "google.maps_api_key.r4r=${{ secrets.GOOGLE_MAPS_KEY_R4R }}" >> gradle.properties
          echo "google.hCaptcha.key=${{ secrets.H_CAPTCHA_KEY }}" >> gradle.properties
          echo "google.hCaptcha.key.r4r=${{ secrets.H_CAPTCHA_KEY_R4R }}" >> gradle.properties

      # As we previously published the app with version code up to 320, we need add this as offset
      - name: Calculate versionCode
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "VERSION_CODE=$((GITHUB_RUN_NUMBER + 320))" >> $GITHUB_ENV

      # VersionCode and versionName are required to publish the app to Play Store
      - name: Set versionCode and versionName
        run: |
          sed -i "s/versionName = \"0.0.0\"/versionName = \"${{ github.ref_name }}\"/g" build.gradle
          sed -i "s/versionCode = 1/versionCode = ${{ env.VERSION_CODE }}/g" build.gradle

      - name: Build App
        run: ./gradlew bundleRelease

      - name: Sign R4R App
        id: sign_app_r4r
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ui/r4r/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }} # optional

      - name: Sign Cyface App
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: measuring-client/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }} # optional

      # We currently upload the app manually to Play Store, but we could automate this using a
      # Google Service Account and the Github Action `r0adkll/upload-google-play`.
      - name: Make R4R app available
        uses: actions/upload-artifact@v3
        with:
          name: Signed App Bundle
          path: ${{ steps.sign_app_r4r.outputs.signedReleaseFile }}
      - name: Make Cyface app available
        uses: actions/upload-artifact@v3
        with:
          name: Signed App Bundle
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      # Automatically mark this tag as release on Github
      - name: Mark tag as release on Github
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          # Release tags of format `1.2.3-beta1 / -alpha1 / -test1` are considered a pre-release
          prerelease: ${{ contains(github.ref, 'test') || contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
