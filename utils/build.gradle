/*
 * Copyright 2023 Cyface GmbH
 *
 * This file is part of the Cyface App for Android.
 *
 * The Cyface App for Android is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Cyface App for Android is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Cyface App for Android. If not, see <http://www.gnu.org/licenses/>.
 */
/**
 * Gradle's build file for the app utils.
 *
 * @author Armin Schnabel
 * @version 1.0.0
 * @since 3.2.0
 */
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'de.cyface.app.utils'
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner rootProject.ext.testInstrumentationRunner

        //buildConfigField("String", "localHostIp", '"10.0.2.2"')
        //buildConfigField "String", "GitHash", '"${getGitHash()}"'
        // we don't describe this provider build variable in the README so it's probably deprecated
        // buildConfigField("String", "provider", '"de.cyface.app.provider"')

        // If our terms change that much that they to be re-accepted, increase this (see Confluence!)
        //buildConfigField "int", "currentTerms", "4"

        // Ensure that the backend's "CyfaceFull" flavor is always used
        missingDimensionStrategy 'project', 'cyface'
        missingDimensionStrategy 'mode', 'full'
    }

    buildTypes {
        debug {
            // Run code coverage reports by default on debug builds.
            testCoverageEnabled = true
        }
        release {
            // mapping.xml file required to decode stack traces, but it's included in the bundle
            minifyEnabled true
            // https://developer.android.com/studio/build/shrink-code.html
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Enabling desugaring to support Java 8 and Java 11 features
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.kotlinTargetJavaVersion
    }
}

dependencies {

    // To change the material design
    //implementation "androidx.appcompat:appcompat:$rootProject.ext.androidxAppCompatVersion"
    // To use material elements (tabs, nav bar, slider, etc.)
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"
    // Generated by the RFR-UI
    //implementation 'androidx.core:core-ktx:1.7.0'

    // Cyface dependencies
    implementation "de.cyface:android-utils:$rootProject.ext.cyfaceUtilsVersion"
    implementation project(':datacapturing')
    //implementation project(':synchronization')
    //implementation project(':persistence')
    //implementation project(':energy_settings')

    // Dependencies for instrumentation tests
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.junitVersion"
    // UiAutomator Testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1' // FIXME: version

    // Dependencies for local unit tests
    // - If Junit symbols are not resolvable in IntelliJ, make sure Build Variant is set to debug
    // - Loading another dependency (e.g. module) only it's production dependencies (compile) are loaded but not other dependencies (e.g. testCompile)
    testImplementation "androidx.test.ext:junit:$rootProject.ext.junitVersion"
}